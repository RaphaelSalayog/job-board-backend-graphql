type Query {
  getAllJobs(limit: Int, offset: Int): JobSubList
  getCompanyById(id: ID!): Company!
  getJobById(id: ID!): Job!
}

type Mutation {
  login(email: String!, password: String!): Login!
  createJob(input: CreateJobInput!): Job!
  updateJob(input: UpdateJobInput!): Job!
  deleteJob(id: ID!): Job!
}

type Login {
  token: String!
  username: String!
}

type Job {
  id: ID!
  company: Company!
  title: String!
  description: String
  createdAt: String!
}

type JobSubList {
  jobs: [Job] #[Jobs!] add ! to prevent array elements to be nullable
  totalCount: Int!
}

type Company {
  id: ID!
  name: String!
  description: String
  jobs: [Job!]
}

# Input Types
input CreateJobInput {
  title: String!
  description: String!
}

input UpdateJobInput {
  id: ID!
  title: String!
  description: String!
}
